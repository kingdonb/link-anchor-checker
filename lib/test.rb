require 'gammo'
require 'open-uri'
require './my_wasmer'

BIG_HONKIN_SELECTOR = "#repo-content-turbo-frame > div > div > div > div.d-flex.flex-column.flex-md-row.mt-n1.mt-2.gutter-condensed.gutter-lg.flex-column > div.col-12.col-md-3.flex-shrink-0 > div:nth-child(3) > div.container-lg.my-3.d-flex.clearfix > div.lh-condensed.d-flex.flex-column.flex-items-baseline.pr-1".freeze

def html
  @html ||= http_client_read
end

def gammo_current_download_count(html)
  g = Gammo.new(html.read)
  h = g.parse

  t = h.css(BIG_HONKIN_SELECTOR)
  u = t[0].children
  v = u[3].attributes["title"]
end

def noko_current_download_count(html)
  h = Nokogiri::HTML(html)

  t = h.css(BIG_HONKIN_SELECTOR)
  u = t[0].children
  v = u[3].attributes["title"].value
end

def get_current_stat_with_time(project, repo, image)
  client = Proc.new do |url|
    URI.open(url)
  end

  t = Time.now
  h = http_client_wrapped(client, project, repo, image)
  c = wasmer_current_download_count(h, repo, image)

  {time: t, count: c}
end

def http_client_wrapped(http_client, project, repo, image)
  url = "https://github.com/#{project}/#{repo}/pkgs/container/#{image}"
  # binding.pry
  http_client.call(url)
end

def http_client_read
  http_client_wrapped.read
end

# This will be the context of our (leaf) operator reconciler
project = 'fluxcd'
repo = 'source-controller'
image = 'source-controller'

puts get_current_stat_with_time(project, repo, image)
# Each interval, the reconciler will call a function
#
# The leaf is generated by a parent, the "fluxcd" org
# Project CRD has one child CRD (Leaf)
# The Leaf has enough data to reconstruct the GitHub URL above
# New repos and images are meant to be discoverable from the top-level Project
#
# When the Project is reconciled, it checks for any owned Leaf nodes that are
# extant but don't match, and it deletes them.
#
# It also checks for any missing Leaf nodes, and adds them.
#
# On Leaf's reconcile interval, it should fetch the HTML page from its URL
# Then, call the wasmer-backed function above (get_current_stat_with_time)
# It should record the detail in the status, (both the number and timestamp.)
#
# We can replace the implementation get_current_stat if we decide we don't like it
#
# Now, let's build a basic operator
